//
// TEF components - grid
//

@import "../../utils/less/mixins.less";

body {
  margin: 0;
  min-width: @widthMin;
}

.tef-wrapper {
  display: block;
  margin: 0 auto;

  .media-min-lg({ width: @widthLG; });
}

[data-columns] {
  display: block;
  margin: 0;
  padding: 0;
  list-style: none;
  .clearfix();

  & > * {
    float: left;
    box-sizing: border-box;
  }

  &.tef-gutter {
    margin: @columnGutter -@columnGutter;
    & > * { margin: @columnGutter; }
  }
}

@columns: 12;
// for loop to generate all column widths (w/o gutter)
.for (@i) when (@i > 0) {
  [data-columns="@{i}"] {
    & > * { .width(@i) }
    &.tef-gutter > * { .width-gutter(@i) }

    .for-span (@j) when (@j > 0) {
      & > [data-column-span="@{j}"] { .width(@i/@j) }
      &.tef-gutter > [data-column-span="@{j}"] { .width-gutter(@i/@j) }
    .for-span(@j - 1);
    }
    .for-span(@i - 1);
  }

  .media-max-lg({
    [data-columns-lg="@{i}"] {
      & > * { .width(@i) }
      &.tef-gutter > * { .width-gutter(@i) }
    }
  });

  .media-max-md({
    [data-columns-md="@{i}"] {
      & > * { .width(@i) }
      &.tef-gutter > * { .width-gutter(@i) }
    }
  });

  .media-max-sm({
    [data-columns-sm="@{i}"] {
      & > * { .width(@i) }
      &.tef-gutter > * { .width-gutter(@i) }
    }
  });

  .media-max-xs({
    [data-columns-xs="@{i}"] {
      & > * { .width(@i) }
      &.tef-gutter > * { .width-gutter(@i) }
    }
  });
  .for(@i - 1);
}
.for(@columns);

.width(@width) {
  width: 100% / @width;
}

.width-gutter(@width) {
  width: (100% / @width) - @gutter;
}

// hide columns
[data-columns="0"] { display: none }
.media-max-lg({ [data-columns-lg="0"] { display: none } });
.media-max-md({ [data-columns-md="0"] { display: none } });
.media-max-sm({ [data-columns-sm="0"] { display: none } });
.media-max-xs({ [data-columns-xs="0"] { display: none } });
